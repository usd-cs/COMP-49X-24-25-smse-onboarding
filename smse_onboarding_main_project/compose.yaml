services:
  web:
    build:
      context: .
    volumes:
      - .:/usr/local/app
      - media_data:/usr/local/app/media:rw
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: smse_onboarding.settings
      DATABASE_URL: postgres://postgres:password@db:5432/smse-db
      DB_HOST: db
      DOCKERIZED: "1"
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_EMAIL: admin@gmail.com
      DJANGO_SUPERUSER_PASSWORD: password
    command: >
      sh -c "
        until nc -z db 5432; do echo 'Waiting for Postgres...'; sleep 2; done &&
        echo 'Postgres is ready' &&
        python manage.py migrate --noinput &&
        echo 'Migrations are done' &&
        python manage.py loaddata fixtures/test_data.json || true &&
        echo 'Test data is loaded' &&
        python manage.py createsuperuser --noinput --username=admin --email=admin@gmail.com || true &&
        echo 'Superuser is created' &&
        python manage.py runserver 0.0.0.0:8000"
        echo 'Server is running'
    restart: always

  proxy:
    image: nginx:latest
    ports:
      - "443:8080"
      - '80:8000'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    restart: always
    depends_on:
      - web

  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: smse-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backup:
    image: postgres:17
    environment:
      PGPASSWORD: password
    volumes:
      - ./backups:/backups
    depends_on:
      - db
    command: >
      sh -c "
        while true; do
          echo "Backing up database at $(date +%Y%m%d_%H%M%S)..."
          pg_dump -h db -U postgres -d smse-db > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql &&
          echo "Backup completed" || echo "Backup failed"
          sleep 86400
        done"

volumes:
  postgres_data:
  media_data:
